plugins {
    id "org.springframework.boot" version "2.6.1" apply false
    id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
}

group = 'com.itransition'
version = '0.0.1-SNAPSHOT'

ext {
    set("testcontainersVersion", "1.16.2")
}

subprojects {
    apply plugin: "java"
    apply plugin: "checkstyle"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.liquibase:liquibase-core"
        implementation "org.mapstruct:mapstruct:1.4.2.Final"
        implementation 'org.projectlombok:lombok:1.18.18'
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
        annotationProcessor "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
        testImplementation "org.testcontainers:junit-jupiter"
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }

    checkstyle {
        toolVersion '9.3'
    }
    checkstyleMain {
        source ='src/main/java'
        configFile file("$rootDir/checkstyle.xml")
    }
    checkstyleTest {
        source ='src/test/java'
        configFile file("$rootDir/checkstyle-test.xml")
    }

    test {
        useJUnitPlatform()
    }

    task wrapper(type: Wrapper){
        gradleVersion = '7.2'
    }
}
